@using System.Linq
@using UserProfiles.Common.Models.Entities
@using UserProfiles.Mvc.Models
@model UserProfiles.Mvc.Models.User

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="Name" />
        <input type="hidden" asp-for="Email" />
        @Html.HiddenFor(m => m.Email, new { @class = "form-control" })
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Email)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Email)
            </dd>
        </dl>
        <div class="form-inline">
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.SelectedRoles, "Roles")
                </div>

                <div class="editor-field">
                    <ul>
                        @foreach (Role role in ViewBag.PossibleRoles)
                        {
                            <li>
                                @if (Model.SelectedRoles != null && Model.SelectedRoles.Select(e => e).Any(e => e == role.Name))
                                {
                                    <input type="checkbox" name="SelectedRoles" value="@role.Name" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="SelectedRoles" value="@role.Name" />
                                }
                                @role.Name
                            </li>
                        }
                        @Html.ValidationMessageFor(model => model.SelectedRoles)
                    </ul>
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.SelectedClaims, "Claims")
                </div>

                <div class="editor-field">
                    <ul>
                        @foreach (Claim claim in ViewBag.PossibleClaims)
                        {
                            <li>
                                @if (Model.SelectedClaims != null && Model.SelectedClaims.Select(e => e).Any(e => e == claim.Value))
                                {
                                    <input type="checkbox" name="SelectedClaims" value="@claim.Value" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="SelectedClaims" value="@claim.Value" />
                                }
                                @claim.Value
                            </li>
                        }
                        @Html.ValidationMessageFor(model => model.SelectedClaims)
                    </ul>
                </div>
            </div>


            <div class="form-group">

                <div class="editor-label">
                    @Html.LabelFor(model => model.SelectedResources, "Resources")
                </div>

                <div class="editor-field">
                    <h7>Merchant</h7>
                    <ul>
                        @foreach (ResourceIdentity resource in ViewBag.PossibleMerchantResources)
                        {
                            <li>
                                @if (Model.SelectedResources != null && Model.SelectedResources.Select(e => e).Any(e => e == resource.Id))
                                {
                                    <input type="checkbox" name="SelectedResources" value="@resource.Id" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="SelectedResources" value="@resource.Id" />
                                }
                                @resource.Name
                            </li>
                        }
                    </ul>
                </div>
                <div class="editor-field">
                    <h7>Business</h7>
                    <ul>
                        @foreach (ResourceIdentity resource in ViewBag.PossibleBusinessResources)
                        {
                            <li>
                                @if (Model.SelectedResources != null && Model.SelectedResources.Select(e => e).Any(e => e == resource.Id))
                                {
                                    <input type="checkbox" name="SelectedResources" value="@resource.Id" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="SelectedResources" value="@resource.Id" />
                                }
                                @resource.Name
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


